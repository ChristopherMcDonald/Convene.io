{
	"variables": [],
	"info": {
		"name": "Convene.io - 1. Make A Team + User + JWT",
		"_postman_id": "0843e03d-30db-f58a-7168-ed951d7a077f",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "localhost:4000/team",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"201 response from users/create\"] = true;",
							"    ",
							"    var body = JSON.parse(responseBody);",
							"    tests[\"response has an id\"] = (body.team !== undefined);",
							"    tests[\"response has correct invited members\"] = (body.team.invitedMembers[0] !== \"mikeroos@convene.io\");",
							"} else {",
							"    tests[\"201 response from /teams\"] = false;",
							"}",
							"",
							"postman.setEnvironmentVariable(\"teamid\", body.team._id);"
						]
					}
				}
			],
			"request": {
				"url": "localhost:4000/team",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"convene\",\n\t\"email\": [\"mikeross@convene.io\"]\n}"
				},
				"description": "Making a team!"
			},
			"response": []
		},
		{
			"name": "localhost:4000/user",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"200 response from users/create\"] = true;",
							"    ",
							"    var body = JSON.parse(responseBody);",
							"    tests[\"response has an id\"] = (body.id !== undefined);",
							"    tests[\"response id is not empty\"] = (body.id !== \"\");",
							"} else {",
							"    tests[\"200 response\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"url": "localhost:4000/user",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": {\n\t\t\"first\": \"Mike\",\n\t\t\"last\": \"Ross\"\n\t},\n\t\"email\": \"mikeross@convene.io\",\n\t\"alias\": \"MikeR\",\n\t\"team\": \"{{teamid}}\",\n\t\"password\": \"Password123!!!\",\n\t\"confPassword\": \"Password123!!!\"\n}"
				},
				"description": "Creating a User"
			},
			"response": []
		},
		{
			"name": "localhost:4000/user/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"200 response from users/login\"] = true;",
							"    ",
							"    var body = JSON.parse(responseBody);",
							"    tests[\"response is valid\"] = (body.res === \"valid\");",
							"    tests[\"response has a token\"] = (body.token !== undefined);",
							"    tests[\"token has correct format\"] = (body.token.startsWith('JWT '));",
							"    ",
							"    postman.setEnvironmentVariable(\"jwt\", body.token);",
							"} else {",
							"    tests[\"200 response\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"url": "localhost:4000/user/login",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"mikeross@convene.io\",\n\t\"password\": \"Password123!!!\"\n}"
				},
				"description": "Get Newly Made User"
			},
			"response": []
		},
		{
			"name": "localhost:4000/user",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"200 response from users/me\"] = true;",
							"    ",
							"    var body = JSON.parse(responseBody);",
							"    tests[\"response is valid\"] = (body.res === \"valid\");",
							"    tests[\"response has a user\"] = (body.user !== undefined);",
							"    tests[\"user has the right information\"] = ",
							"            (body.user.alias === \"MikeR\" ",
							"            && body.user.email === \"mikeross@convene.io\");",
							"} else {",
							"    tests[\"200 response\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"url": "localhost:4000/user",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{jwt}}",
						"description": ""
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000",
						"description": ""
					}
				],
				"body": {},
				"description": "Getting the current user"
			},
			"response": []
		},
		{
			"name": "localhost:4000/user - w/o JWT",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 401) {",
							"    tests[\"401 response from users/me (expected)\"] = true;",
							"    ",
							"    var body = JSON.parse(responseBody);",
							"    tests[\"response is valid\"] = (body.res === \"invalid\");",
							"    tests[\"response has no user\"] = (body.user === undefined);",
							"    tests[\"response has the wrong reason\"] = (body.reason === \"bad authorization\");",
							"} else {",
							"    tests[\"401 response from users/me (expected)\"] = false;",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable(\"jwt\", undefined);",
							""
						]
					}
				}
			],
			"request": {
				"url": "localhost:4000/user",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{jwt}}",
						"description": ""
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000",
						"description": ""
					}
				],
				"body": {},
				"description": "Post logout attempt at users/me"
			},
			"response": []
		}
	]
}